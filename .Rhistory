}
}
}
for (i in 2:7) {
for (j in 2:7) {
if (j > i) {
filename <- paste0(output,'chr', chr, '/', names[i], '_', names[j], '.png')
png(file = filename,width=1164, height=578)
plot(rare_variants[,1], rare_variants[,i], type='l', lwd=3, col='red', lty=1, main = paste('Rare Variants Chromosome', chr), xlab='bp', ylab = 'Minor Allele Frequency', cex.axis=1.5,cex.lab=1.5,cex=1.5, cex.main=1.5, ylim=c(0,1.1))
points(rare_variants[,1], rare_variants[,j], type='l', lwd=3, col='cornflowerblue', lty=1)
legend('bottomright', c(names[i],names[j]),col=c("red","cornflowerblue"), lty=1, cex = 0.65, inset=0.01)
dev.off()
}
}
}
chr = '21'
for (i in 2:7) {
for (j in 2:7) {
if (j > i) {
filename <- paste0(output,'chr', chr, '/', names[i], '_', names[j], '.png')
png(file = filename,width=1164, height=578)
plot(rare_variants[,1], rare_variants[,i], type='l', lwd=3, col='red', lty=1, main = paste('Rare Variants Chromosome', chr), xlab='bp', ylab = 'Minor Allele Frequency', cex.axis=1.5,cex.lab=1.5,cex=1.5, cex.main=1.5, ylim=c(0,1.1))
points(rare_variants[,1], rare_variants[,j], type='l', lwd=3, col='cornflowerblue', lty=1)
legend('bottomright', c(names[i],names[j]),col=c("red","cornflowerblue"), lty=1, cex = 0.65, inset=0.01)
dev.off()
}
}
}
rare_variants <- frequency[frequency$overall_freq <= 0.01,]
output <- '/Users/Emilka/Desktop/math127_finalProject/plots/rare_variants/'
for (i in 2:7) {
for (j in 2:7) {
if (j > i) {
filename <- paste0(output,'chr', chr, '/', names[i], '_', names[j], '.png')
png(file = filename,width=1164, height=578)
plot(rare_variants[,1], rare_variants[,i], type='l', lwd=3, col='red', lty=1, main = paste('Rare Variants Chromosome', chr), xlab='bp', ylab = 'Minor Allele Frequency', cex.axis=1.5,cex.lab=1.5,cex=1.5, cex.main=1.5, ylim=c(0,0.7))
points(rare_variants[,1], rare_variants[,j], type='l', lwd=3, col='cornflowerblue', lty=1)
legend('topright', c(names[i],names[j]),col=c("red","cornflowerblue"), lty=1, cex = 1, inset=0.01)
dev.off()
}
}
}
source('~/Desktop/math127_finalProject/code/final_report.r')
for (i in 2:7) {
for (j in 2:7) {
if (j > i) {
filename <- paste0(output,'chr', chr, '/', names[i], '_', names[j], '.png')
png(file = filename,width=1164, height=578)
plot(rare_variants[,1], rare_variants[,i], type='l', lwd=3, col='red', lty=1, main = paste('Rare Variants Chromosome', chr), xlab='bp', ylab = 'Minor Allele Frequency', cex.axis=1.5,cex.lab=1.5,cex=1.5, cex.main=1.5, ylim=c(0,1))
points(rare_variants[,1], rare_variants[,j], type='l', lwd=3, col='cornflowerblue', lty=1)
legend('topright', c(names[i],names[j]),col=c("red","cornflowerblue"), lty=1, cex = 1, inset=0.01)
dev.off()
}
}
}
data <- read.table('/Users/Emilka/Desktop/math127_finalProject/data/filtered/chr.2_analysis', stringsAsFactors = FALSE)
chr = '2'
overall_frequency <- data[,13]
populations <- c('AFR', 'AMR', 'EAS', 'FIN', 'NFE', 'SAS')
AC_orig <- data[,c(4,5,7,8,11,12)]
colnames(AC_orig) <- populations
AN_orig <- data[,c(15,16,18,19,20,21)]
colnames(AN_orig) <- populations
# functions ---------------------------------------------------------------
get_AC <- function(listOfNames) {
tmp <- strsplit(listOfNames, "=")
ac <- sapply(tmp, "[", 2)
return(as.double(ac))
}
# script ------------------------------------------------------------------
# extract the numbers
n <- nrow(AC_orig)
AC <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
AN <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
frequency <- data.frame(position = data$V2, AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
for (i in 1:ncol(AC_orig)) {
tmp <- AC_orig[,i]
AC[,i] <- get_AC(tmp)
tmp <- AN_orig[,i]
AN[,i] <- get_AC(tmp)
frequency[,i+1] <- AC[,i]/AN[,i]
}
overall_frequency <- get_AC(overall_frequency)
# add overal_frequency info to data frame
frequency$overall_freq <- overall_frequency
frequency <- na.omit(frequency)
position <- frequency$position
names <- names(frequency)
output <- '/Users/Emilka/Desktop/math127_finalProject/plots/new/'
rare_variants <- frequency[frequency$overall_freq <= 0.01,]
output <- '/Users/Emilka/Desktop/math127_finalProject/plots/rare_variants/'
for (i in 2:7) {
for (j in 2:7) {
if (j > i) {
filename <- paste0(output,'chr', chr, '/', names[i], '_', names[j], '.png')
png(file = filename,width=1164, height=578)
plot(rare_variants[,1], rare_variants[,i], type='l', lwd=3, col='red', lty=1, main = paste('Rare Variants Chromosome', chr), xlab='bp', ylab = 'Minor Allele Frequency', cex.axis=1.5,cex.lab=1.5,cex=1.5, cex.main=1.5, ylim=c(0,1))
points(rare_variants[,1], rare_variants[,j], type='l', lwd=3, col='cornflowerblue', lty=1)
legend('topright', c(names[i],names[j]),col=c("red","cornflowerblue"), lty=1, cex = 1, inset=0.01)
dev.off()
}
}
}
data <- read.table('/Users/Emilka/Desktop/math127_finalProject/data/filtered/chr.3_analysis', stringsAsFactors = FALSE)
chr = '3'
overall_frequency <- data[,13]
populations <- c('AFR', 'AMR', 'EAS', 'FIN', 'NFE', 'SAS')
AC_orig <- data[,c(4,5,7,8,11,12)]
colnames(AC_orig) <- populations
AN_orig <- data[,c(15,16,18,19,20,21)]
colnames(AN_orig) <- populations
# functions ---------------------------------------------------------------
get_AC <- function(listOfNames) {
tmp <- strsplit(listOfNames, "=")
ac <- sapply(tmp, "[", 2)
return(as.double(ac))
}
# script ------------------------------------------------------------------
# extract the numbers
n <- nrow(AC_orig)
AC <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
AN <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
frequency <- data.frame(position = data$V2, AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
for (i in 1:ncol(AC_orig)) {
tmp <- AC_orig[,i]
AC[,i] <- get_AC(tmp)
tmp <- AN_orig[,i]
AN[,i] <- get_AC(tmp)
frequency[,i+1] <- AC[,i]/AN[,i]
}
overall_frequency <- get_AC(overall_frequency)
# add overal_frequency info to data frame
frequency$overall_freq <- overall_frequency
# plots -------------------------------------------------------------------
# remove missing entries just in case (not quite sure how plot handles NAs)
frequency <- na.omit(frequency)
position <- frequency$position
names <- names(frequency)
rare_variants <- frequency[frequency$overall_freq <= 0.01,]
output <- '/Users/Emilka/Desktop/math127_finalProject/plots/rare_variants/'
for (i in 2:7) {
for (j in 2:7) {
if (j > i) {
filename <- paste0(output,'chr', chr, '/', names[i], '_', names[j], '.png')
png(file = filename,width=1164, height=578)
plot(rare_variants[,1], rare_variants[,i], type='l', lwd=3, col='red', lty=1, main = paste('Rare Variants Chromosome', chr), xlab='bp', ylab = 'Minor Allele Frequency', cex.axis=1.5,cex.lab=1.5,cex=1.5, cex.main=1.5, ylim=c(0,1))
points(rare_variants[,1], rare_variants[,j], type='l', lwd=3, col='cornflowerblue', lty=1)
legend('topright', c(names[i],names[j]),col=c("red","cornflowerblue"), lty=1, cex = 1, inset=0.01)
dev.off()
}
}
}
source('~/Desktop/math127_finalProject/code/plot_rare_variants.r')
for (chr in 4:22){}
for (chr in 4:22)
print(chr)
source('~/Desktop/math127_finalProject/code/plot_rare_variants.r')
source('~/Desktop/math127_finalProject/code/plot_rare_variants.r')
warnings()
data <- read.table('/Users/Emilka/Desktop/math127_finalProject/data/filtered/chr.1_analysis', stringsAsFactors = FALSE)
chr = '1'
overall_frequency <- data[,13]
populations <- c('AFR', 'AMR', 'EAS', 'FIN', 'NFE', 'SAS')
AC_orig <- data[,c(4,5,7,8,11,12)]
colnames(AC_orig) <- populations
AN_orig <- data[,c(15,16,18,19,20,21)]
colnames(AN_orig) <- populations
# functions ---------------------------------------------------------------
get_AC <- function(listOfNames) {
tmp <- strsplit(listOfNames, "=")
ac <- sapply(tmp, "[", 2)
return(as.double(ac))
}
# script ------------------------------------------------------------------
# extract the numbers
n <- nrow(AC_orig)
AC <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
AN <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
frequency <- data.frame(position = data$V2, AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
for (i in 1:ncol(AC_orig)) {
tmp <- AC_orig[,i]
AC[,i] <- get_AC(tmp)
tmp <- AN_orig[,i]
AN[,i] <- get_AC(tmp)
frequency[,i+1] <- AC[,i]/AN[,i]
}
overall_frequency <- get_AC(overall_frequency)
# add overal_frequency info to data frame
frequency$overall_freq <- overall_frequency
frequency <- na.omit(frequency)
position <- frequency$position
names <- names(frequency)
head(frequency)
which.max(frequency[,5])
frequency[20,5]
frequency[20,]
head(data)
data[data$V2== 69897,]
source('~/Desktop/math127_finalProject/code/plot_rare_variants.r')
data <- read.table('/Users/Emilka/Desktop/math127_finalProject/data/release2/chr.X_analysis', stringsAsFactors = FALSE)
chr = 'X'
overall_frequency <- data[,13]
populations <- c('AFR', 'AMR', 'EAS', 'FIN', 'NFE', 'SAS')
AC_orig <- data[,c(4,5,7,8,11,12)]
colnames(AC_orig) <- populations
AN_orig <- data[,c(15,16,18,19,20,21)]
colnames(AN_orig) <- populations
# functions ---------------------------------------------------------------
get_AC <- function(listOfNames) {
tmp <- strsplit(listOfNames, "=")
ac <- sapply(tmp, "[", 2)
return(as.double(ac))
}
# script ------------------------------------------------------------------
# extract the numbers
n <- nrow(AC_orig)
AC <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
AN <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
frequency <- data.frame(position = data$V2, AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
for (i in 1:ncol(AC_orig)) {
tmp <- AC_orig[,i]
AC[,i] <- get_AC(tmp)
tmp <- AN_orig[,i]
AN[,i] <- get_AC(tmp)
frequency[,i+1] <- AC[,i]/AN[,i]
}
overall_frequency <- get_AC(overall_frequency)
# add overal_frequency info to data frame
frequency$overall_freq <- overall_frequency
# remove missing entries just in case (not quite sure how plot handles NAs)
frequency <- na.omit(frequency)
position <- frequency$position
names <- names(frequency)
output <- '/Users/Emilka/Desktop/math127_finalProject/plots/release2/'
output <- '/Users/Emilka/Desktop/math127_finalProject/plots/new/'
for (i in 2:7) {
for (j in 2:7) {
if (j > i) {
filename <- paste0(output,'chr', chr, '/', names[i], '_', names[j], '.png')
png(file = filename,width=1164, height=578)
plot(position, frequency[,i], type='l', lwd=3, col='red', lty=1, main = paste('Chromosome', chr), xlab='bp', ylab = 'Minor Allele Frequency', cex.axis=1.5,cex.lab=1.5,cex=1.5, cex.main=1.5, ylim=c(0,1.1))
points(position, frequency[,j], type='l', lwd=3, col='cornflowerblue', lty=1)
legend('bottomright', c(names[i],names[j]),col=c("red","cornflowerblue"), lty=1, inset=0.01)
dev.off()
}
}
}
frequency <- na.omit(frequency)
position <- frequency$position
names <- names(frequency)
rare_variants <- frequency[frequency$overall_freq <= 0.01,]
output <- '/Users/Emilka/Desktop/math127_finalProject/plots/release2/'
for (i in 2:7) {
for (j in 2:7) {
if (j > i) {
filename <- paste0(output,'chr', chr, '/', names[i], '_', names[j], '.png')
png(file = filename,width=1164, height=578)
plot(rare_variants[,1], rare_variants[,i], type='l', lwd=3, col='red', lty=1, main = paste('Rare Variants Chromosome', chr), xlab='bp', ylab = 'Minor Allele Frequency', cex.axis=1.5,cex.lab=1.5,cex=1.5, cex.main=1.5, ylim=c(0,1))
points(rare_variants[,1], rare_variants[,j], type='l', lwd=3, col='cornflowerblue', lty=1)
legend('topright', c(names[i],names[j]),col=c("red","cornflowerblue"), lty=1, cex = 1, inset=0.01)
dev.off()
}
}
}
head(rare_variants)
head(data)
head(AC)
head(AN)
data <- read.table('/Users/Emilka/Desktop/math127_finalProject/data/filtered/chr.X_analysis', stringsAsFactors = FALSE)
chr = 'X'
overall_frequency <- data[,13]
populations <- c('AFR', 'AMR', 'EAS', 'FIN', 'NFE', 'SAS')
AC_orig <- data[,c(4,5,7,8,11,12)]
colnames(AC_orig) <- populations
AN_orig <- data[,c(15,16,18,19,20,21)]
colnames(AN_orig) <- populations
head(data)
# functions ---------------------------------------------------------------
get_AC <- function(listOfNames) {
tmp <- strsplit(listOfNames, "=")
ac <- sapply(tmp, "[", 2)
return(as.double(ac))
}
# script ------------------------------------------------------------------
# extract the numbers
n <- nrow(AC_orig)
AC <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
AN <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
frequency <- data.frame(position = data$V2, AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
for (i in 1:ncol(AC_orig)) {
tmp <- AC_orig[,i]
AC[,i] <- get_AC(tmp)
tmp <- AN_orig[,i]
AN[,i] <- get_AC(tmp)
frequency[,i+1] <- AC[,i]/AN[,i]
}
overall_frequency <- get_AC(overall_frequency)
# add overal_frequency info to data frame
frequency$overall_freq <- overall_frequency
# remove missing entries just in case (not quite sure how plot handles NAs)
frequency <- na.omit(frequency)
position <- frequency$position
names <- names(frequency)
output <- '/Users/Emilka/Desktop/math127_finalProject/plots/new/'
for (i in 2:7) {
for (j in 2:7) {
if (j > i) {
filename <- paste0(output,'chr', chr, '/', names[i], '_', names[j], '.png')
png(file = filename,width=1164, height=578)
plot(position, frequency[,i], type='l', lwd=3, col='red', lty=1, main = paste('Chromosome', chr), xlab='bp', ylab = 'Minor Allele Frequency', cex.axis=1.5,cex.lab=1.5,cex=1.5, cex.main=1.5, ylim=c(0,1.1))
points(position, frequency[,j], type='l', lwd=3, col='cornflowerblue', lty=1)
legend('bottomright', c(names[i],names[j]),col=c("red","cornflowerblue"), lty=1, inset=0.01)
dev.off()
}
}
}
rare_variants <- frequency[frequency$overall_freq <= 0.01,]
output <- '/Users/Emilka/Desktop/math127_finalProject/plots/rare_variants/'
for (i in 2:7) {
for (j in 2:7) {
if (j > i) {
filename <- paste0(output,'chr', chr, '/', names[i], '_', names[j], '.png')
png(file = filename,width=1164, height=578)
plot(rare_variants[,1], rare_variants[,i], type='l', lwd=3, col='red', lty=1, main = paste('Rare Variants Chromosome', chr), xlab='bp', ylab = 'Minor Allele Frequency', cex.axis=1.5,cex.lab=1.5,cex=1.5, cex.main=1.5, ylim=c(0,1))
points(rare_variants[,1], rare_variants[,j], type='l', lwd=3, col='cornflowerblue', lty=1)
legend('topright', c(names[i],names[j]),col=c("red","cornflowerblue"), lty=1, cex = 1, inset=0.01)
dev.off()
}
}
}
15*23
data <- read.table('/Users/Emilka/Desktop/math127_finalProject/data/filtered/chr.21_analysis', stringsAsFactors = FALSE)
chr = '21'
overall_frequency <- data[,13]
populations <- c('AFR', 'AMR', 'EAS', 'FIN', 'NFE', 'SAS')
AC_orig <- data[,c(4,5,7,8,11,12)]
colnames(AC_orig) <- populations
AN_orig <- data[,c(15,16,18,19,20,21)]
colnames(AN_orig) <- populations
# functions ---------------------------------------------------------------
get_AC <- function(listOfNames) {
tmp <- strsplit(listOfNames, "=")
ac <- sapply(tmp, "[", 2)
return(as.double(ac))
}
# script ------------------------------------------------------------------
# extract the numbers
n <- nrow(AC_orig)
AC <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
AN <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
frequency <- data.frame(position = data$V2, AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
for (i in 1:ncol(AC_orig)) {
tmp <- AC_orig[,i]
AC[,i] <- get_AC(tmp)
tmp <- AN_orig[,i]
AN[,i] <- get_AC(tmp)
frequency[,i+1] <- AC[,i]/AN[,i]
}
overall_frequency <- get_AC(overall_frequency)
# add overal_frequency info to data frame
frequency$overall_freq <- overall_frequency
frequency$overall_freq <- overall_frequency
frequency <- na.omit(frequency)
position <- frequency$position
names <- names(frequency)
head(frequency)
plot(position, frequency[,2], type='l', lwd=3, col='blue', lty=1, main = paste('Chromosome', chr), xlab='bp', ylab = 'Minor Allele Frequency', cex.axis=1.5,cex.lab=1.5,cex=1.5, cex.main=1.5, ylim=c(0,1.1))
points(position, frequency[,6], type='l', lwd=3, col='blue', lty=1)
legend('bottomright', c('AFR', 'NFE'),col=c("blue","green"), lty=1, inset=0.01)
data <- read.table('/Users/Emilka/Desktop/math127_finalProject/data/filtered/chr.21_analysis', stringsAsFactors = FALSE)
chr = '21'
overall_frequency <- data[,13]
populations <- c('AFR', 'AMR', 'EAS', 'FIN', 'NFE', 'SAS')
AC_orig <- data[,c(4,5,7,8,11,12)]
colnames(AC_orig) <- populations
AN_orig <- data[,c(15,16,18,19,20,21)]
colnames(AN_orig) <- populations
# functions ---------------------------------------------------------------
get_AC <- function(listOfNames) {
tmp <- strsplit(listOfNames, "=")
ac <- sapply(tmp, "[", 2)
return(as.double(ac))
}
# script ------------------------------------------------------------------
# extract the numbers
n <- nrow(AC_orig)
AC <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
AN <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
frequency <- data.frame(position = data$V2, AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
for (i in 1:ncol(AC_orig)) {
tmp <- AC_orig[,i]
AC[,i] <- get_AC(tmp)
tmp <- AN_orig[,i]
AN[,i] <- get_AC(tmp)
frequency[,i+1] <- AC[,i]/AN[,i]
}
overall_frequency <- get_AC(overall_frequency)
frequency$overall_freq <- overall_frequency
# plots -------------------------------------------------------------------
# remove missing entries just in case (not quite sure how plot handles NAs)
frequency <- na.omit(frequency)
position <- frequency$position
names <- names(frequency)
output <- '/Users/Emilka/Desktop/math127_finalProject/plots/new/'
for (i in 2:7) {
for (j in 2:7) {
if (j > i) {
filename <- paste0(output,'chr', chr, '/', names[i], '_', names[j], '.png')
png(file = filename,width=1164, height=578)
plot(position, frequency[,i], type='l', lwd=3, col='red', lty=1, main = paste('Chromosome', chr), xlab='bp', ylab = 'Minor Allele Frequency', cex.axis=1.5,cex.lab=1.5,cex=1.5, cex.main=1.5, ylim=c(0,1.1))
points(position, frequency[,j], type='l', lwd=3, col='cornflowerblue', lty=1)
legend('bottomright', c(names[i],names[j]),col=c("red","cornflowerblue"), lty=1, inset=0.01)
dev.off()
}
}
}
source('~/Desktop/math127_finalProject/code/plot_all.r')
source('~/Desktop/math127_finalProject/code/plot_all.r')
head(data)
source('~/Desktop/math127_finalProject/code/plot_rare_variants.r')
source('~/Desktop/math127_finalProject/code/plot_all.r')
source('~/Desktop/math127_finalProject/code/plot_all.r')
head(data)
head(frequency)
source('~/Desktop/math127_finalProject/code/plot_all.r')
source('~/Desktop/math127_finalProject/code/plot_all.r')
data <- read.table('/Users/Emilka/Desktop/math127_finalProject/data/filtered/chr.4_analysis', stringsAsFactors = FALSE)
chr = '4'
overall_frequency <- data[,13]
populations <- c('AFR', 'AMR', 'EAS', 'FIN', 'NFE', 'SAS')
AC_orig <- data[,c(4,5,7,8,11,12)]
colnames(AC_orig) <- populations
AN_orig <- data[,c(15,16,18,19,20,21)]
colnames(AN_orig) <- populations
# functions ---------------------------------------------------------------
get_AC <- function(listOfNames) {
tmp <- strsplit(listOfNames, "=")
ac <- sapply(tmp, "[", 2)
return(as.double(ac))
}
# script ------------------------------------------------------------------
# extract the numbers
n <- nrow(AC_orig)
AC <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
AN <- data.frame(AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
frequency <- data.frame(position = data$V2, AFR=numeric(n), AMR=numeric(n), EAS=numeric(n), FIN=numeric(n), NFE=numeric(n), SAS=numeric(n))
for (i in 1:ncol(AC_orig)) {
tmp <- AC_orig[,i]
AC[,i] <- get_AC(tmp)
tmp <- AN_orig[,i]
AN[,i] <- get_AC(tmp)
frequency[,i+1] <- AC[,i]/AN[,i]
}
overall_frequency <- get_AC(overall_frequency)
# add overal_frequency info to data frame
frequency$overall_freq <- overall_frequency
# plots -------------------------------------------------------------------
# remove missing entries just in case (not quite sure how plot handles NAs)
frequency <- na.omit(frequency)
position <- frequency$position
names <- names(frequency)
rare_variants <- frequency[frequency$overall_freq <= 0.01,]
head(rare_variants)
rare_variants[rare_variants$EAS == 1,]
data[data$V2 == 73434380,]
head(frequency)
density(frequency$position)
plot(density(frequency$position))
data <- read.table('/Users/Emilka/Desktop/math127_finalProject/data/filtered/chr.4_analysis', stringsAsFactors = FALSE)
head(data)
15*23
source('~/Documents/Research/23andMe-SNPs/R_Analysis/code/06_MSGBWTCCC2Computation.r')
setwd('/Users/Emilka/Documents/Research/23andMe-SNPs/R_Analysis/')
source('~/Documents/Research/23andMe-SNPs/R_Analysis/code/06_MSGBWTCCC2Computation.r')
plot(MSGBROC)
source('~/Documents/Research/23andMe-SNPs/R_Analysis/code/05_MSGBComputationScript.r')
head(coeff)
coeff$rsID
View(coeff)
file = '/Users/Emilka/Desktop/SNPlist.txt'
write(coeff$rsID, file)
t(coeff$rsID)
write(t(coeff$rsID), file)
help(write)
write(coeff$rsID, file, sep = ' ')
write.table(coeff$rsID, file, sep = ' ')
write(coeff$rsID, file, sep = ' ')
coeff$rsID
file_23andMe <- '/Users/Emilka/Documents/toyCode/23andMe/python/data.txt'
head(file_23andMe)
genotypeData <- read.table(file_23andMe, stringsAsFactors = FALSE)
head(genotypeData)
genotypeData <- genotypeData[,c(1,2)]
file_23andMe <- './data/sample_23andMe_data/LXJ001_genotypes.txt'
genotypeData <- read.table(file_23andMe, stringsAsFactors = FALSE)
head(genotypeData)
file_23andMe <- '/Users/Emilka/Documents/toyCode/23andMe/python/data.txt'
# read it in
genotypeData <- read.table(file_23andMe, stringsAsFactors = FALSE)
# get only the information that we need
genotypeData <- genotypeData[,c(1,2)]
colnames(genotypeData) <- c("rsID", "genotype")
# keeping only rsID for which we have coefficients
genotypeDataReduced <- genotypeData[genotypeData$rsID %in% coeff$rsID, ]
# retrieve the allele corresponding to the coefficients
alleleOfCoeffs <- coeff$allele[match(genotypeDataReduced$rsID, coeff$rsID)]
# count the mAF
genotype <- mapply(function(genotypeAlleles, alleleOfCoeff) 2-sum(genotypeAlleles %in% alleleOfCoeff),
strsplit(genotypeDataReduced$genotype, split = ""), alleleOfCoeffs)
names(genotype) <- paste(genotypeDataReduced$rsID, alleleOfCoeffs, sep = "_")
MSGBscore <- MSGB(genotype)
cat('## Your MSGB score is: ', MSGBscore)
